{"version":3,"sources":["components/datetime.jsx","components/cardfront.jsx","components/Stock.jsx","components/flipcard.jsx","App.js","serviceWorker.js","index.js"],"names":["DTimePicker","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","range","da","e","pad","s","map","d","getFullYear","getMonth","getDate","join","setState","state","fetchStock","startDate","Date","endDate","err","_this2","react_default","a","createElement","react_google_flight_datepicker_dist","closeOnSelect","onChange","maxDate","className","startWeekDay","singleCalendar","startDatePlaceholder","endDatePlaceholder","highlightToday","React","Component","Stock","id","react_typed_default","strings","backDelay","typeSpeed","backSpeed","loop","loading","react_plotly_default","data","x","dates","y","open","type","mode","marker","color","name","close","high","low","layout","autosize","title","concat","length","style","width","height","top","display","justifyContent","alignItems","minHeight","dist_default","timeout","react_switch_default","checkedIcon","fontSize","paddingRight","uncheckedIcon","coin","checked","onClick","flip","Card","loading2","date","arguments","undefined","pointerToThis","assertThisInitialized","console","log","market","API_Call","fetch","then","response","json","Information","Note","alert","obj","dat2a","keys","splice","indexOf","obj2","forEach","key","ke2y","i","push","metadata","stockChartXValues_open","stockChartYValues_open","stockChartXValues_close","stockChartYValues_close","right","components_Stock","FlippingCardPage","flipcard_Card","App","flipcard_FlippingCardPage","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e33b1023.chunk.js","sourcesContent":["import React from 'react';\r\nimport { RangeDatePicker } from 'react-google-flight-datepicker';\r\nimport 'react-google-flight-datepicker/dist/main.css';\r\nexport default class DTimePicker extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      startDate: new Date(), endDate: new Date(),\r\n      err: false\r\n    }\r\n\r\n  }\r\n  range = (da) => {\r\n    let e\r\n    if (da[0] && da[1]) {\r\n      function pad(s) { return (s < 10) ? '0' + s : s; }\r\n      e = da.map((d) => [d?.getFullYear(), pad(d?.getMonth() + 1), pad(d?.getDate())].join('-'))\r\n      if (e[0] && e[1]) {\r\n        this.setState((state) => ({ range: da }))\r\n        this.props.fetchStock(e)\r\n      }\r\n\r\n    }\r\n\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <RangeDatePicker\r\n          closeOnSelect={true}\r\n          startDate={this.state.startDate}\r\n          endDate={this.state.endDate}\r\n          onChange={(e, s) => this.range([e, s])}\r\n          maxDate={new Date()}\r\n          className=\" my-own-class-name\"\r\n          startWeekDay=\"sunday\"\r\n          singleCalendar={true}\r\n          startDatePlaceholder=\"From\"\r\n          endDatePlaceholder=\"To\"\r\n          highlightToday\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n}","\r\nimport React from \"react\";\r\nimport DTimePicker from \"./datetime\"\r\nimport Switch from \"react-switch\";\r\n\r\n// React component for the front side of the card\r\nexport default class CardFront extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            metadata: {},\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n        const metadata = this.props.metadata\r\n\r\n        return (\r\n\r\n            <div className=\"  card\">\r\n\r\n                <div className=\"banner flex-fill\">\r\n                    <svg viewBox=\"30 1 6 60\" >\r\n                        <g transform=\"translate(0.00630876,-0.00301984)\">\r\n                            <path fill=\"#f7931a\" d=\"m63.033,39.744c-4.274,17.143-21.637,27.576-38.782,23.301-17.138-4.274-27.571-21.638-23.295-38.78,4.272-17.145,21.635-27.579,38.775-23.305,17.144,4.274,27.576,21.64,23.302,38.784z\" />\r\n                            <path fill=\"#FFF\" d=\"m46.103,27.444c0.637-4.258-2.605-6.547-7.038-8.074l1.438-5.768-3.511-0.875-1.4,5.616c-0.923-0.23-1.871-0.447-2.813-0.662l1.41-5.653-3.509-0.875-1.439,5.766c-0.764-0.174-1.514-0.346-2.242-0.527l0.004-0.018-4.842-1.209-0.934,3.75s2.605,0.597,2.55,0.634c1.422,0.355,1.679,1.296,1.636,2.042l-1.638,6.571c0.098,0.025,0.225,0.061,0.365,0.117-0.117-0.029-0.242-0.061-0.371-0.092l-2.296,9.205c-0.174,0.432-0.615,1.08-1.609,0.834,0.035,0.051-2.552-0.637-2.552-0.637l-1.743,4.019,4.569,1.139c0.85,0.213,1.683,0.436,2.503,0.646l-1.453,5.834,3.507,0.875,1.439-5.772c0.958,0.26,1.888,0.5,2.798,0.726l-1.434,5.745,3.511,0.875,1.453-5.823c5.987,1.133,10.489,0.676,12.384-4.739,1.527-4.36-0.076-6.875-3.226-8.515,2.294-0.529,4.022-2.038,4.483-5.155zm-8.022,11.249c-1.085,4.36-8.426,2.003-10.806,1.412l1.928-7.729c2.38,0.594,10.012,1.77,8.878,6.317zm1.086-11.312c-0.99,3.966-7.1,1.951-9.082,1.457l1.748-7.01c1.982,0.494,8.365,1.416,7.334,5.553z\" />\r\n                        </g>\r\n                    </svg>\r\n\r\n                </div>\r\n                <div className=\"menu\">\r\n                    <div className=\"opener\"><span></span><span></span><span></span></div>\r\n                </div>\r\n                <div className=\"col\">\r\n                    <div className=\"border border-bottom-0 border-top-0 d-flex flex-column h-100 justify-content-center\" style={{\r\n\r\n                    }}>\r\n\r\n\r\n                        <h2 className=\"name\">{metadata[\"1. Information\"]}</h2>\r\n                        <div className=\"title\">{metadata[\"2. Digital Currency Code\"]}|{metadata[\"3. Digital Currency Name\"]}</div>\r\n                        <div className=\"desc\">Last Refreshed : <br />{metadata[\"6. Last Refreshed\"]} | {metadata[\"7. Time Zone\"]}</div>\r\n\r\n\r\n                    </div>\r\n                </div>\r\n                <div className=\"col px-sm-4\" style={{\r\n                }} >\r\n                    <div className=\"actions\">\r\n                        <div className=\"follow-info\">\r\n                            <h2><a href=\"#\"><span>{metadata[\"4. Market Code\"]}</span><small>Market_Code</small></a></h2>\r\n                            <h2><a href=\"#\"><span>{metadata[\"5. Market Name\"]}</span><small>Market_Name</small></a></h2>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"d-flex flex-column\">\r\n                        <span>USA/ILS</span>\r\n                        <label>\r\n\r\n                            <Switch\r\n                                checkedIcon={<div\r\n                                    style={{\r\n                                        display: \"flex\",\r\n                                        justifyContent: \"center\",\r\n                                        alignItems: \"center\",\r\n                                        height: \"100%\",\r\n                                        fontSize: 15,\r\n                                        color: \"red\",\r\n                                        paddingRight: 2\r\n                                    }}\r\n                                >\r\n                                    USA\r\n                                </div>}\r\n                                uncheckedIcon={\r\n                                    <div\r\n                                        style={{\r\n                                            display: \"flex\",\r\n                                            justifyContent: \"center\",\r\n                                            alignItems: \"center\",\r\n                                            height: \"100%\",\r\n                                            fontSize: 15,\r\n                                            color: \"blue\",\r\n                                            paddingRight: 2\r\n                                        }}\r\n                                    >\r\n                                        ILS\r\n                                    </div>\r\n                                }\r\n                                onChange={() => {\r\n                                    this.props.coin()\r\n\r\n                                }} checked={this.props.checked} />\r\n                        </label>\r\n                    </div>\r\n\r\n                    {this.props.err ? <span className=\"text-danger\">DATE NOT FOUND</span> : \"\"}\r\n\r\n                    <DTimePicker\r\n                        type=\"start\"\r\n                        fetchStock={this.props.fetchStock} />\r\n\r\n\r\n                    <div className=\"follow-btn pb-1 pt-1\">\r\n\r\n                        <button onClick={this.props.flip}>PICK & GO / GO</button>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n\r\n\r\n\r\n\r\n            </div >\r\n\r\n        )\r\n    }\r\n}","import React from 'react';\nimport Plot from 'react-plotly.js';\nimport Typed from 'react-typed';\nimport Switch from \"react-switch\";\nimport Loader from \"react-loader-spinner\";\n\n\n\n\nclass Stock extends React.Component {\n  // constructor(props) {\n  //   super(props);\n  // }\n\n\n  render() {\n    return (\n      <div>\n        <div id=\"bitcoin_message\">\n          <Typed\n            strings={['BITCOIN Market']}\n\n            backDelay={10000}\n            typeSpeed={40}\n            backSpeed={100}\n\n            loop\n          />\n        </div>\n\n        {this.props.loading === false ? < Plot\n\n          data={[\n            {\n              x: this.props.data.dates,\n              y: this.props.data.open,\n              type: 'scatter',\n              mode: 'lines+markers',\n              marker: { color: 'green' },\n              name: 'open'\n            },\n            {\n              x: this.props.data.dates,\n              y: this.props.data.close,\n              type: 'scatter',\n              mode: 'lines+markers',\n              marker: { color: 'red' },\n              name: 'close'\n\n            },\n            {\n              x: this.props.data.dates,\n              y: this.props.data.high,\n              type: 'scatter',\n              mode: 'lines+markers',\n              marker: { color: 'black' },\n              name: 'high'\n\n            },\n            {\n              x: this.props.data.dates,\n              y: this.props.data.low,\n              type: 'scatter',\n              mode: 'lines+markers',\n              marker: { color: 'blue' },\n              name: 'low'\n\n            },\n\n          ]}\n          layout={{\n            autosize: true,\n            title: `start date:${this.props.data.dates[this.props.data.dates.length - 1]} | end dade: ${this.props.data.dates[0]}\n`\n          }}\n          style={{ width: \"100%\", height: \"100%\" }}\n        /> : <div className=\"\" style={{\n          top: \"-73px\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          minHeight: \"200px\",\n        }}>\n          <Loader\n            type=\"Circles\"\n            color=\"#ff9800\"\n            height={100}\n            width={100}\n            timeout={5000}\n          />\n        </div>}\n        <div className=\"bg-light m-auto rounded-circle row w-50\">\n          <span>USA/ILS</span>\n          <label>\n            <Switch\n              checkedIcon={<div\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                  height: \"100%\",\n                  fontSize: 15,\n                  color: \"red\",\n                  paddingRight: 2\n                }}\n              >\n                USA\n              </div>}\n              uncheckedIcon={\n                <div\n                  style={{\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                    height: \"100%\",\n                    fontSize: 15,\n                    color: \"blue\",\n                    paddingRight: 2\n                  }}\n                >\n                  ILS\n                </div>\n              }\n              onChange={() => {\n                this.props.coin()\n\n              }} checked={this.props.checked} />\n          </label>\n\n          <div className=\"follow-btn pt-1\">\n\n            <button onClick={() => this.props.flip()}>BACK</button>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Stock;","import React, { Component } from \"react\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nimport CardFront from \"./cardfront\"\r\nimport Stock from \"./Stock\"\r\nimport \"../css/card.css\"\r\n\r\nclass Card extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            metadata: {},\r\n            stockChartXValues_open: [],\r\n            stockChartYValues_open: [],\r\n            stockChartXValues_close: [],\r\n            stockChartYValues_close: [],\r\n            data: {},\r\n            flip: false,\r\n            loading: true,\r\n            err: false,\r\n            coin: \"ILS\",\r\n            checked: false,\r\n            loading2: true,\r\n            dates: []\r\n        }\r\n\r\n    }\r\n    coin = e => {\r\n\r\n        this.setState((state) => {\r\n            return { loading2: true, checked: !this.state.checked, coin: state.coin === \"ILS\" ? \"USD\" : \"ILS\" }\r\n        }\r\n            , () => this.fetchStock())\r\n\r\n    }\r\n    componentDidMount() {\r\n        this.fetchStock();\r\n    }\r\n    fetchStock = (date = this.state.dates) => {\r\n        const pointerToThis = this;\r\n        console.log(pointerToThis);\r\n        const API_KEY = 'HGJWFG4N8AQ66ICD'; //'F41ON15LGCFM4PR7';// \"9V66ST5SY883CWI1\"//\"GPT5COX9H2LGBQ8Y\"//\r\n        let StockSymbol = 'BTC';\r\n        let market = this.state.coin;\r\n        let API_Call = `https://www.alphavantage.co/query?function=DIGITAL_CURRENCY_DAILY&symbol=${StockSymbol}&market=${market}&outputsize=compact&apikey=${API_KEY}`;\r\n\r\n        fetch(API_Call)\r\n            .then(\r\n                function (response) {\r\n                    return response.json();\r\n                }\r\n            )\r\n            .then(\r\n                function (data) {\r\n                    console.log(data);\r\n                    if (data.Information || data.Note) {\r\n                        alert(data.Information || data.Note)\r\n                        return\r\n                    }\r\n                    let coin = pointerToThis.state.coin\r\n                    const obj = {\r\n                        dates: [],\r\n                        open: [],\r\n                        high: [],\r\n                        low: [],\r\n                        close: [],\r\n                    }\r\n                    if (!date.length) {\r\n\r\n                        const keys = Object.keys(obj)\r\n                        var x = (key) => {\r\n                            [`1a. open (${coin})`, `2a. high (${coin})`, `3a. low (${coin})`, `4a. close (${coin})`].forEach((ke2y, i) => {\r\n                                ke2y = data['Time Series (Digital Currency Daily)'][key][ke2y]\r\n                                obj[keys[i + 1]].push(ke2y)\r\n                            });\r\n\r\n                        }\r\n\r\n                        for (var key in data['Time Series (Digital Currency Daily)']) {\r\n                            obj.dates.push(key);\r\n                            x(key)\r\n\r\n\r\n                        }\r\n\r\n                    }\r\n                    else {\r\n\r\n                        if (data['Time Series (Digital Currency Daily)'][date[0]]) {\r\n                            let dat2a = data['Time Series (Digital Currency Daily)']\r\n                            let dates = Object.keys(dat2a)\r\n                            dates.splice(dates.indexOf(date[0]) + 1, dates.length);\r\n                            console.log(dat2a)\r\n                            dates.splice(0, dates.indexOf(date[1]) - 1);\r\n                            console.log(dat2a)\r\n                            let obj2 = {}\r\n                            dates.forEach((d) => {\r\n                                obj2[d] = data['Time Series (Digital Currency Daily)'][d]\r\n                            })\r\n\r\n                            let keys = Object.keys(obj)\r\n                            x = (key) => {\r\n                                [`1a. open (${coin})`, `2a. high (${coin})`, `3a. low (${coin})`, `4a. close (${coin})`]\r\n                                    .forEach((ke2y, i) => {\r\n                                        ke2y = obj2[key][ke2y]\r\n                                        obj[keys[i + 1]].push(ke2y)\r\n                                    });\r\n\r\n                            }\r\n                            for (key in obj2) {\r\n                                obj.dates.push(key);\r\n                                x(key)\r\n\r\n                            }\r\n\r\n                        } else {\r\n                            pointerToThis.setState({ err: true })\r\n                        }\r\n\r\n\r\n                    }\r\n\r\n                    if (obj.dates.length) {\r\n                        pointerToThis.setState({\r\n                            loading2: false,\r\n                            err: false,\r\n                            loading: false,\r\n                            metadata: data['Meta Data'],\r\n                            data: obj,\r\n                            dates: date\r\n\r\n                        });\r\n\r\n                    }\r\n                    else {\r\n                        pointerToThis.setState({ err: true })\r\n                    }\r\n                }\r\n            )\r\n\r\n    }\r\n    flip = e => {\r\n\r\n        this.setState({ flip: !this.state.flip }, () => console.log(this.state.flip))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            this.state.loading ?\r\n                <div className=\"poster-container\" style={{\r\n                    top: \"20px\",\r\n                    display: \"flex\",\r\n                    right: \"12px\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                }}>\r\n                    <Loader\r\n                        type=\"Circles\"\r\n                        color=\"#ff9800\"\r\n                        height={300}\r\n                        width={300}\r\n                        timeout={5000}\r\n                    />\r\n                </div>\r\n                :\r\n                <div className=\" container \">\r\n\r\n                    <div className={this.state.flip ? \"poster flipped\" : \"poster\"}>\r\n\r\n                        <div className=\" pb-4 pic\">\r\n\r\n                            {/* <CardFront\r\n                                coin={this.coin}\r\n                                err={this.state.err}\r\n                                metadata={this.state.metadata}\r\n                                flip={this.flip}\r\n                                fetchStock={this.fetchStock}\r\n                                checked={this.state.checked}\r\n                            /> */}\r\n\r\n\r\n                        </div>\r\n\r\n                        <div className=\"back container pic \">\r\n                            <Stock\r\n                                flip={this.flip}\r\n                                coin={this.coin}\r\n                                checked={this.state.checked}\r\n                                loading={this.state.loading2}\r\n                                data={this.state.data}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default class FlippingCardPage extends React.Component {\r\n    // constructor(props) {\r\n    //     super(props);\r\n\r\n    // }\r\n    render() {\r\n        return (\r\n            <div className=\"container \">\r\n                <Card />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//  FlippingCardPage;","import React from 'react';\nimport FlippingCardPage from './components/flipcard';\nimport './css/App.css';\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nclass App extends React.Component {\n\n\n  render() {\n    return (\n      <div className=\"App\" >\n        <FlippingCardPage />\n      </div>\n    );\n  }\n\n\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}